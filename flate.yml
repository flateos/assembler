---
- hosts: localhost
  connection: local
  become: yes

  vars:
    builder:
      id: 1001
      name: flate
    home: "/home/{{builder.name}}"
    gpg:
      key: '{{ lookup("env", "GPG__KEY_ID") }}'
      pass: '{{ lookup("env", "GPG__PASSWORD") }}'
      dirs:
        - "/root/.gnupg"
        - "{{home}}/.gnupg"
      configs:
        - { name: "gpg-agent.conf", content: "allow-loopback-pinentry" }
        - { name: "gpg.conf", content: "pinentry-mode loopback" }
    packages:
      - archiso
      - atk
      - base-devel
      - boost
      - ckbcomp
      - extra-cmake-modules
      - flate-fctl
      - git
      - glibc
      - grass
      - go
      - grim
      - gtk-layer-shell
      - gtk-update-icon-cache
      - gtk3
      - hwinfo
      - jq
      - kconfig
      - kcoreaddons
      - ki18n
      - kiconthemes
      - kio
      - kitty
      - kpmcore
      - libpwquality
      - mako
      - mkinitcpio-openswap
      - pacman-contrib
      - perl
      - plasma-framework
      - polkit-qt5
      - qt5-svg
      - qt5-tools
      - qt5-translations
      - qt5-xmlpatterns
      - rofi
      - rustup
      - slurp
      - solid
      - starship
      - sudo
      - sway
      - tela-circle-icon-theme
      - wf-recorder
      - yaml-cpp
      - zsh

  tasks:
    - name: "System: Added Space mirror"
      copy:
        src: "./core/platform/pacman.conf"
        dest: /etc/pacman.conf

    - name: "System: Added makepkg config"
      shell: "envsubst < ./core/platform/makepkg.conf > /etc/makepkg.conf"

    - name: "System: Added {{builder.name}} group"
      group:
        gid: "{{builder.id}}"
        name: "{{builder.name}}"
        state: present

    - name: "System: Added {{builder.name}} user"
      user:
        uid: "{{builder.id}}"
        name: "{{builder.name}}"
        comment: "FlateOS builder"
        group: "{{builder.name}}"
        create_home: yes

    - name: "System: Import GPG key"
      command: "gpg
        --batch
        --homedir {{item}}
        --passphrase {{gpg.pass}}
        --allow-secret-key-import --import /keys/gpg.asc"
      become_user: "{{builder.name}}"
      become: no
      loop: "{{gpg.dirs}}"

    - name: "System: GPG config"
      copy:
        dest: "/usr/share/gnupg/{{item.name}}"
        content: "{{item.content}}"
      loop: "{{gpg.configs}}"

    - name: "System: Directory permissions for the builder"
      file:
        path: "{{item}}"
        owner: "{{builder.name}}"
        group: "{{builder.name}}"
        recurse: yes
      loop:
        - "{{home}}"

    - name: "Pacman: Start keyring"
      shell: pacman-key --init

    - name: "Pacman: Populate"
      shell: pacman-key --populate archlinux

    - name: "Pacman: Keyserver"
      shell: "pacman-key --recv-key 0x{{gpg.key}} --keyserver keys.openpgp.org"

    - name: "Pacman: Check fingerprint"
      shell: "pacman-key --finger {{gpg.key}}"

    - name: "Pacman: Sign key"
      shell: "pacman-key --lsign-key {{gpg.key}}"

    - name: "Pacman: Upgrade"
      pacman:
        upgrade: yes
        update_cache: yes
        force: yes
        state: latest

    - name: "Pacman: Install dependencies"
      pacman:
        name: "{{packages}}"
        state: latest
